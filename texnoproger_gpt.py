import telebot
import requests
from openai import OpenAI
from datetime import datetime
bot = telebot.TeleBot('8094647476:AAG-LJ8xPwZ48k4g-L26xyQwAIjflZAUEq4')
client = OpenAI(
    base_url="https://api.langdock.com/openai/eu/v1",
    api_key="sk-7R61ZWf5JwybYYMaMfGD3VRntOUOQsWhmifD-bzisozo3NZu-DrlgImLIV5v-D07PLXf6mnDULte2zM1QoKYcA"
)
NEWS_API_KEY = 'ee58ae79b7174efc8cb97cec9853eb06'
def get_news(query):
    url = f'https://newsapi.org/v2/everything?q={query}&apiKey={NEWS_API_KEY}'
    response = requests.get(url)

    if response.status_code == 200:
        news_data = response.json()
        articles = news_data['articles']
        if articles:
            news_summary = ""
            for article in articles[:5]:  # –û—Ç—Ä–∏–º—É—î–º–æ –ø–µ—Ä—à—ñ 5 —Å—Ç–∞—Ç–µ–π
                title = article['title']
                description = article['description']
                url = article['url']
                news_summary += f"**{title}**\n{description}\n{url}\n\n"
            return news_summary
        else:
            return "–ù–µ–º–∞—î –Ω–æ–≤–∏–Ω –∑–∞ –≤–∞—à–∏–º –∑–∞–ø–∏—Ç–æ–º."
    else:
        return "–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –Ω–æ–≤–∏–Ω."
@bot.message_handler(commands=['start'])
def start_handler(message):
    first_name = message.from_user.first_name
    bot.send_message(message.chat.id,f'–ü—Ä–∏–≤—ñ—Ç, {first_name}! –Ø TechnoProer IA! –ù–∞–ø–∏—à–∏ –º–µ–Ω—ñ –±—É–¥—å-—è–∫–µ –ø–∏—Ç–∞–Ω–Ω—è, —ñ —è –¥–∞–º –Ω–∞ –Ω—å–æ–≥–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å!')
@bot.message_handler(func=lambda message: True)
def chat_with_gpt(message):
    user_input = message.text.lower()
    if '—è–∫–∏–π —Å—å–æ–≥–æ–¥–Ω—ñ –¥–µ–Ω—å' in user_input:
        now = datetime.now()
        formatted_date = now.strftime("%d.%m.%Y")
        formatted_time = now.strftime("%H:%M")
        reply = f"–°—å–æ–≥–æ–¥–Ω—ñ {formatted_date}, —á–∞—Å: {formatted_time}."

    elif '–∫–æ–ª–∏ —Ç–∏ –∑—Ä–æ–±–ª–µ–Ω–∏–π' in user_input:
        username = "ùïÆùñîùñâùñäùïÆùñÜùñô"
        reply = f"–Ø –±—É–≤ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º {username} —Ç–∞ –∑–∞–ø—É—â–µ–Ω–∏–π 26 –∫–≤—ñ—Ç–Ω—è 2025 —Ä–æ–∫—É –æ 10:00. –ú–æ—è –º–µ—Ç–∞ ‚Äî –¥–æ–ø–æ–º–∞–≥–∞—Ç–∏ –≤–∞–º!"

    elif '–¥–µ —Ç—å–æ–ª–∫–∏' in user_input:
        reply = "–î—ñ–≤—á–∞—Ç–∞ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –≤ —Ä—ñ–∑–Ω–∏—Ö –º—ñ—Å—Ü—è—Ö, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —É –ø–∞—Ä–∫—É, –≤ –∫–∞—Ñ–µ, –Ω–∞ –∑–∞—Ö–æ–¥–∞—Ö –∞–±–æ –≤ –Ω–∞–≤—á–∞–ª—å–Ω–∏—Ö –∑–∞–∫–ª–∞–¥–∞—Ö. –ü—Ä–æ—Å—Ç–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –±—É—Ç–∏ –≤–≤—ñ—á–ª–∏–≤–∏–º —ñ —à—É–∫–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–µ –º—ñ—Å—Ü–µ –¥–ª—è –∑–Ω–∞–π–æ–º—Å—Ç–≤–∞."
    elif '–Ω–æ–≤–∏–Ω–∏' in user_input:
        query = user_input.replace('–Ω–æ–≤–∏–Ω–∏', '').strip()  # –û—á–∏—â–∞—î–º–æ –∑–∞–ø–∏—Ç –≤—ñ–¥ —Å–ª–æ–≤–∞ '–Ω–æ–≤–∏–Ω–∏'
        if query:
            reply = get_news(query)
        else:
            reply = "–ë—É–¥—å –ª–∞—Å–∫–∞, —É—Ç–æ—á–Ω—ñ—Ç—å, –ø—Ä–æ —è–∫—ñ –Ω–æ–≤–∏–Ω–∏ –≤–∏ —Ö–æ—á–µ—Ç–µ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è."
    else:
        try:
            completion = client.chat.completions.create(
                model="gpt-4o-mini",
                messages=[
                    {
                        "role": "system",
                        "content": (
                            "–¢–∏ ‚Äî —É–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π –∞—Å–∏—Å—Ç–µ–Ω—Ç.\n\n"
                            "- –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–¥–∞—î –ø–∏—Ç–∞–Ω–Ω—è –ø—Ä–æ –ª—é–¥–µ–π, –ø–æ–¥—ñ—ó –∞–±–æ —Ñ–∞–∫—Ç–∏, –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π –∫–æ—Ä–æ—Ç–∫–æ, —á—ñ—Ç–∫–æ —ñ –≤–≤—ñ—á–ª–∏–≤–æ.\n"
                            "- –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–∏—à–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–Ω—É –∑–∞–¥–∞—á—É –∞–±–æ –≤–∏—Ä–∞–∑, —Ç–æ–¥—ñ:\n"
                            "    * –í–≤–æ–¥—å –∑–º—ñ–Ω–Ω—ñ —á–µ—Ä–µ–∑ –ª—ñ—Ç–µ—Ä–∏.\n"
                            "    * –û—Ñ–æ—Ä–º–∏ –≤—Å—ñ –æ–±—á–∏—Å–ª–µ–Ω–Ω—è —É –∑–≤–∏—á–∞–π–Ω–æ–º—É —Ç–µ–∫—Å—Ç–æ–≤–æ–º—É –≤–∏–≥–ª—è–¥—ñ (–±–µ–∑ LaTeX —ñ –±–µ–∑ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏—Ö —Å–∏–º–≤–æ–ª—ñ–≤).\n"
                            "    * –ü–æ—è—Å–Ω—é–π —Ä—ñ—à–µ–Ω–Ω—è –∫—Ä–æ–∫ –∑–∞ –∫—Ä–æ–∫–æ–º –ø—Ä–æ—Å—Ç–∏–º–∏ —Ä–µ—á–µ–Ω–Ω—è–º–∏.\n"
                            "    * –í –∫—ñ–Ω—Ü—ñ –∑–∞–≤–∂–¥–∏ –æ–∫—Ä–µ–º–æ –ø–∏—à–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å —É —Ñ–æ—Ä–º–∞—Ç—ñ: –í—ñ–¥–ø–æ–≤—ñ–¥—å: ...\n"
                            "- –§–æ—Ä–º—É–ª—é–π –≤—ñ–¥–ø–æ–≤—ñ–¥—å —Ç–∞–∫, –Ω—ñ–±–∏ –ø–æ—è—Å–Ω—é—î—à —ó—ó –∂–∏–≤—ñ–π –ª—é–¥–∏–Ω—ñ.\n"
                            "- –ù–µ –ø–µ—Ä–µ–ø–∏—Ç—É–π, –æ–¥—Ä–∞–∑—É –¥–∞–≤–∞–π –≤—ñ–¥–ø–æ–≤—ñ–¥—å."
                        )
                    },
                    {"role": "user", "content": user_input}
                ]
            )
            reply = completion.choices[0].message.content
        except Exception as e:
            reply = "–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—ñ –¥–æ GPT üòï"
    bot.send_message(message.chat.id, reply)
print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ!")
bot.polling()

